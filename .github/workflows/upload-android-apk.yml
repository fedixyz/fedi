name: Upload APK to GitHub
on:
    workflow_dispatch:

jobs:
    release-android:
        name: Build Android APK and publish in GitHub draft release
        runs-on: [self-hosted, linux]
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
              with:
                  submodules: true

            - uses: cachix/install-nix-action@v30
              with:
                  nix_path: nixpkgs=channel:nixos-22.05

            - uses: cachix/cachix-action@v15
              with:
                  name: fedibtc
                  authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

            - name: Inject secrets into .env file
              run: |
                  echo "CHANNEL_KEY_ANDROID=${{ secrets.ZENDESK_CHANNEL_KEY_ANDROID }}" >> ui/native/.env
                  echo "CHANNEL_KEY_IOS=${{ secrets.ZENDESK_CHANNEL_KEY_IOS }}" >> ui/native/.env
                  echo "ZENDESK_KID=${{ secrets.ZENDESK_KEY_ID }}" >> ui/native/.env
                  echo "ZENDESK_SECRET_KEY=${{ secrets.ZENDESK_SECRET }}" >> ui/native/.env

            - name: Build bridge
              run: nix develop -c env BUILD_ALL_BRIDGE_TARGETS=1 CARGO_PROFILE=release ./scripts/bridge/build-bridge-android.sh

            - name: Build UI dependencies
              run: nix develop -c ./scripts/ui/build-deps.sh

            - name: Prep for APK build
              id: prep-apk
              run: nix develop -c ./scripts/ci/prep-apk.sh

            - name: Generate release credentials
              env:
                  ANDROID_KEYSTORE_FILE_ENCODED: ${{ secrets.ANDROID_KEYSTORE_FILE_ENCODED }}
                  ANDROID_KEYSTORE_PROPERTIES_ENCODED: ${{ secrets.ANDROID_KEYSTORE_PROPERTIES_ENCODED }}
                  PLAY_STORE_JSON_CREDENTIALS_ENCODED: ${{ secrets.PLAY_STORE_JSON_CREDENTIALS_ENCODED }}
              run: nix develop -c ./scripts/ci/make-android-release-creds.sh

            - name: Build APK
              env:
                  APK_PATH: ${{ steps.prep-apk.outputs.APK_PATH }}
                  BUILD_BRIDGE: 0
                  BUILD_UI_DEPS: 0
              run: nix develop -c ./scripts/ui/build-production-apk.sh

            - name: Verify bridge hash
              env:
                  APK_PATH: ${{ steps.prep-apk.outputs.APK_PATH }}
              run: |
                  set -euo pipefail

                  bash ./scripts/ci/verify-bridge-hash.sh "$APK_PATH" "${{ github.sha }}"

            - name: Create draft GitHub release with APK
              uses: softprops/action-gh-release@v2.4.0
              with:
                  tag_name: ${{ steps.prep-apk.outputs.APK_VERSION }}
                  name: '${{ steps.prep-apk.outputs.APK_VERSION }}'
                  body: 'Built from commit: ${{ github.sha }}'
                  draft: true
                  append_body: true
                  files: ${{ steps.prep-apk.outputs.APK_PATH }}
