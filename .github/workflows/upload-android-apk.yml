name: Upload APK to GitHub
on:
    workflow_dispatch:
    pull_request:
        types:
            - closed
        branches:
            - 'master'

jobs:
    release-android:
        if: >
            (github.event_name == 'workflow_dispatch') ||
            (
              github.event.pull_request.merged == true &&
              startsWith(github.head_ref, 'release/')
            )
        name: Build Android APK and publish in GitHub draft release
        runs-on: [self-hosted, linux]
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
              with:
                  submodules: true

            - uses: cachix/install-nix-action@v26
              with:
                  nix_path: nixpkgs=channel:nixos-22.05

            - uses: cachix/cachix-action@v15
              with:
                  name: fedibtc
                  authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

            - name: Build bridge
              run: nix develop -c env BUILD_ALL_BRIDGE_TARGETS=1 CARGO_PROFILE=release scripts/ci/run-in-fs-dir-cache.sh build-bridge-android ./scripts/bridge/build-bridge-android.sh

            - name: Build UI dependencies
              run: nix develop -c ./scripts/ui/build-deps.sh

            - name: Prep for APK build
              id: prep-apk
              run: nix develop -c ./scripts/ci/prep-apk.sh

            - name: Generate release credentials
              env:
                  ANDROID_KEYSTORE_FILE_ENCODED: ${{ secrets.ANDROID_KEYSTORE_FILE_ENCODED }}
                  ANDROID_KEYSTORE_PROPERTIES_ENCODED: ${{ secrets.ANDROID_KEYSTORE_PROPERTIES_ENCODED }}
                  PLAY_STORE_JSON_CREDENTIALS_ENCODED: ${{ secrets.PLAY_STORE_JSON_CREDENTIALS_ENCODED }}
              run: nix develop -c ./scripts/ci/make-android-release-creds.sh

            - name: Build APK
              env:
                  APK_PATH: ${{ steps.prep-apk.outputs.APK_PATH }}
                  # Consider: should we even have separate steps above for this?
                  BUILD_BRIDGE: 0
                  BUILD_UI_DEPS: 0
              run: nix develop -c ./scripts/ui/build-production-apk.sh

            - name: Verify bridge hash
              env:
                  APK_PATH: ${{ steps.prep-apk.outputs.APK_PATH }}
              run: |
                  set -euo pipefail

                  bash ./scripts/ci/verify-bridge-hash.sh "$APK_PATH" "${{ github.sha }}"

            - name: Create draft GitHub release with APK
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: v${{ steps.prep-apk.outputs.APK_VERSION }}
                  name: 'v${{ steps.prep-apk.outputs.APK_VERSION }}'
                  body: 'This release was generated by CI with the latest APK for an upcoming release. Built from commit: ${{ github.sha }}'
                  draft: true
                  files: ${{ steps.prep-apk.outputs.APK_PATH }}

    call-deployment-workflow:
        name: Trigger deployment to Google Play for Internal Testing
        needs: release-android
        uses: ./.github/workflows/deploy-to-gp-internal-testing.yml
        secrets: inherit
        if: >-
            startsWith(github.head_ref, 'release/')
