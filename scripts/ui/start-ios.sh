#!/usr/bin/env bash

set -e
REPO_ROOT=$(git rev-parse --show-toplevel)

ENABLE_IOS_LOGGING=${ENABLE_IOS_LOGGING:-0}

if [[ "$BUILD_IOS" == "0" ]]; then
    echo "iOS build skipped"
    exit 0
fi

$REPO_ROOT/scripts/enforce-nix.sh

# This script allows the user to select an iOS device from a list generated by 
# the "xcrun xctrace list devices" command. The list includes both physical devices 
# connected to the machine and simulators. Once the user selects a device, the script 
# extracts the device ID, which can then be used to run commands specifically for that device.
devices=()
xcrunDevicesList=$(nix develop .#xcode --command xcrun xctrace list devices)
while IFS= read -r line; do
    devices+=("$line")
done < <(echo "$xcrunDevicesList" | grep -Eo '.*\([0-9A-Fa-f-]+\)$')

# If no devices are found, exit
if [ ${#devices[@]} -eq 0 ]; then
    echo "No ios devices found"
    exit 1
fi

# Set the default choice to the last device
defaultChoice=${#devices[@]}

# allow the user to select from the list
if [[ "$SELECT_IOS_DEVICE" == "1" ]]; then
    echo "Select a device:"
    for i in "${!devices[@]}"; do 
        echo "$((i+1))) ${devices[$i]}"
    done

    # Prompt for user input and use the default choice if none is given
    read -p "Enter choice: " choice
    choice=${choice:-$defaultChoice}

    selectedDevice=${devices[$((choice-1))]}  # adjust for 0-indexing

    echo "You selected device: $selectedDevice"
else
    # If SELECT_IOS_DEVICE is 0, select the default device without prompting the user
    selectedDevice=${devices[$((defaultChoice-1))]}
fi

# Extract the device ID
FEDI_DEVICE_ID=$(echo "$selectedDevice" | sed -n -E 's/.*\(([^)]+)\).*/\1/p')

cd $REPO_ROOT/ui/native
echo "Building & installing ios app bundle"
run_ios_result=0
# Launch on selected ios device...
nix develop .#xcode --command npx react-native run-ios --destination arch=x86_64 --udid $FEDI_DEVICE_ID|| {
    echo -e "\n\x1B[31;1m"
    echo "Something went wrong..."
    echo "Try deleting DerivedData for a clean build directory and try again..."
    echo -e "\x1B[32;1m"
    echo "sudo rm -rf ~/Library/Developer/Xcode/DerivedData"
    echo -e "\x1B[31;1m"
    echo "   if that still doesn't work. Be sure to follow the React Native docs for environment setup and try again..."
    echo "   https://reactnative.dev/docs/environment-setup"
    echo -e "\x1B[0m"
    run_ios_result=1
}

# Start logging only if the previous command was successful
if [[ "$ENABLE_IOS_LOGGING" == "1" && $run_ios_result -eq 0 ]]; then
    nix develop .#xcode --command npx react-native log-ios
fi
