import { RequestInvoiceArgs } from 'webln'

import { MSats } from '@fedi/common/types'

export type RpcMethodNames = keyof RpcMethods;
export type RpcPayload<M extends RpcMethodNames> = RpcMethods[M][0];
export type RpcResponse<M extends RpcMethodNames> = RpcMethods[M][1];

// used by generated code
declare const __opaque_type__: unique symbol; // https://blog.beraliv.dev/2021-05-07-opaque-type-in-typescript
export type Opaque<BaseType, TagName> = BaseType & { readonly [__opaque_type__]: TagName }

export type EcashRequest = Omit<RequestInvoiceArgs, 'defaultMemo'>

export type JSONValue =
  | string
  | number
  | boolean
  | null
  | { [key: string]: JSONValue }
  | JSONValue[]

export type JSONObject = Record<string, JSONValue>

// this was auto generated by ts-bindgen.sh
